---
const { heading, tabs } = Astro.props;
---

<div class="max-w-6xl px-6 mx-auto !py-16 lg:!py-24">
  <h2 class="text-4xl text-secondary text-center font-semibold mb-8">
    {heading}
  </h2>
  <div>
    <!-- Tabs -->
    <div class="flex justify-center items-center lg:flex-row flex-col gap-20">
      <div class="h-auto relative lg:w-1/2 w-full">
        {
          tabs.map((tab, index) => (
            <div
              role="tabpanel"
              id={`tabpanel-${tab.id}`}
              aria-labelledby={`tab-${tab.id}`}
              class={`tab-panel flex flex-col gap-10 overflow-hidden transition duration-300 ${
                index === 0 ? "flex " : "hidden "
              }`}
            >
              {tab.steps.map((item, index) => (
                <div class="relative flex items-start  ">
                  <div class="relative pr-5 h-full ">
                    <div class="bg-red-800 number">{index + 1}</div>
                    {index !== tab.steps.length - 1 && (
                      <div class="number-line bg-red-800" />
                    )}{" "}
                  </div>

                  <div class="">
                    <h3 class="text-2xl text-secondary font-semibold mb-2">
                      {item.title}
                    </h3>
                    <p class="text-xl font-light">{item.description}</p>
                  </div>
                </div>
              ))}
            </div>
          ))
        }
      </div>
      <div class="lg:w-1/2 w-full">
        <div
          role="tablist"
          aria-label="tabs"
          class="relative flex border rounded-lg w-full mb-12 items-start overflow-hidden mt-8 transition"
        >
          {
            tabs.map((tab, index) => (
              <button
                role="tab"
                aria-selected={index === 0 ? "true" : "false"}
                aria-controls={`tabpanel-${tab.id}`}
                id={`tab-${tab.id}`}
                class={`relative block flex-1  px-6 py-2 tab  ${index === 0 ? "active" : ""}`}
              >
                <span class="font-medium text-2xl whitespace-nowrap">
                  {tab.title}
                </span>
              </button>
            ))
          }
        </div>
        <video muted autoplay loop class="w-full h-auto rounded-2xl">
          <source src="/videos/Travel-Safely-Video.mp4" type="video/mp4" />
        </video>
      </div>
    </div>
  </div>

  <!-- Tab Panels -->
</div>

<style>
  .tab {
    transition:
      background-color 0.3s,
      color 0.3s;
  }

  .tab.active {
    border-left: 1px solid #000;

    background-color: rgb(0, 42, 92, 0.1);
  }

  .tab-panel {
    transition: opacity 0.3s ease-in-out;
  }
  .number {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    border-radius: 8px;
    width: 48px;
    height: 48px;
    color: #fff;
    font-size: 32px;
    position: relative;
  }
  .number-line {
    position: absolute;
    width: 4px;
    height: 100%;
    left: 33.33%;
    top: 48px;
    transform: translateX(-50%);
    height: calc(100% + 4rem);
    @media (min-width: 1024px) {
      height: calc(100% + 6rem);
    }
  }
</style>

<script>
  const tabs = document.querySelectorAll(".tab");
  const panels = document.querySelectorAll(".tab-panel");

  tabs.forEach((tab, index) => {
    tab.addEventListener("click", () => {
      // Set active tab
      tabs.forEach((t) => t.classList.remove("active"));
      tab.classList.add("active");

      // Show corresponding panel
      panels.forEach((panel, panelIndex) => {
        if (index === panelIndex) {
          panel.classList.remove("hidden");
          panel.classList.add("flex");
        } else {
          panel.classList.add("hidden");
          panel.classList.remove("flex");
        }
      });
    });
  });
</script>
