---
import QuoteForm from "@components/forms/QuoteForm.svelte";
import { getAssetURL } from "@utils/getImage";
import { getEntry } from "astro:content";
import { getGlobal } from "src/lib/getPageData";
const global = await getGlobal();
const { item } = Astro.props;
const general = await getEntry("singletons", "general");
const bgImage = getAssetURL(item.image);
const quoteFormTitle = item.quote_title;
const showStats = item.showStats ?? false;
const stats = item.stats ?? [];
const SectionTitle = item.sectionTitle ?? "";
---

<div class="md:h-[800px] h-full relative">
  <div class="w-full bg-white rounded-lg md:hidden block p-4 md:p-8">
    <QuoteForm
      client:visible
      quoteFormTitle={quoteFormTitle}
      phoneNumber={general.data.contactInformation.phoneDisplay}
      promoCode={global?.promo_code}
    />
  </div>

  <div class="relative h-full">
    <img
      src={bgImage}
      alt={item.title}
      width={1920}
      height={1080}
      class="absolute inset-0 w-full h-full object-cover"
      loading="eager"
      decoding="async"
    />
    <div
      class="absolute inset-0"
      style={`background: var(--gradient-direction)`}
    >
    </div>
    <div
      class="custom-container mx-auto h-full flex items-end px-4 md:px-8 relative"
    >
      <div class="text-white md:w-1/2 py-12">
        <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-4 fade-up">
          {item.title}
        </h1>
        <p class="text-lg md:text-xl font-medium fade-up">
          {item.description}
        </p>
      </div>
    </div>
  </div>

  <div
    class="md:absolute md:flex hidden top-0 right-0 h-full w-full md:w-1/2 items-center justify-center z-10"
  >
    <div class="w-full bg-white rounded-lg lg:max-w-[550px] p-4 md:p-8">
      <QuoteForm
        client:visible
        quoteFormTitle={quoteFormTitle}
        phoneNumber={general.data.contactInformation.phoneDisplay}
        promoCode={global?.promo_code}
      />
    </div>
  </div>
</div>

{
  showStats && (
    <div class="bg-[#E5EFFC] py-10 custom-container ">
      <h2 class="text-sm font-semibold uppercase tracking-wider text-secondary mb-10 text-center ">
        {SectionTitle}
      </h2>
      <div class="mx-auto px-4 grid grid-cols-1 sm:grid-cols-3 text-center gap-8">
        {stats.map((stat: any) => (
          <div class="flex flex-col lg:flex-row justify-center items-center gap-2">
            <img
              src={stat.icon}
              alt={stat.label}
              width={32}
              height={32}
              loading="eager"
              decoding="async"
            />
            <p class="text-xl font-bold text-gray-800">{stat.value}</p>
            <p class="text-sm text-secondary">{stat.label}</p>
          </div>
        ))}
      </div>
    </div>
  )
}

<style>
  :root {
    --gradient-direction: linear-gradient(
      to bottom,
      rgba(0, 154, 214, 0.7),
      rgba(41, 147, 188, 0)
    );
  }

  @media (min-width: 768px) {
    :root {
      --gradient-direction: linear-gradient(
        to top,
        rgba(0, 154, 214, 0.7),
        rgba(41, 147, 188, 0),
        rgba(41, 147, 188, 0)
      );
    }
  }

  .slide-content {
    width: 100%;
    height: 100%;
    min-height: 500px;
  }

  .fade-up {
    animation: fadeUp 0.5s ease-out forwards;
  }

  @keyframes fadeUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
